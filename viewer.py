#!/usr/bin/env python3

"""
solitario_ia
Copyright (C) 2023 Aníbal Ibaceta, Sebastián Hevia & Jorge Jara

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

import json
import sys
from solitaire_board import SolitaireBoard

"""
This script is used to view the moves generated by the solver. It takes a single
argument, which is the path to a JSON file containing the board state and the
moves to make. The JSON file should be in the same format as the output of
solver.py.

The moves are printed to the screen one at a time, and the user must press enter
to see the next move. This allows the user to see the moves being made and
understand how the solver works.
"""


def main():
    if len(sys.argv) < 2:
        print(f"Usage: {sys.argv[0]} <board_file>", file=sys.stderr)
        sys.exit(1)

    board_json = None

    with open(sys.argv[1], "r") as f:
        board_json = f.read()
        board_json = json.loads(board_json)

    board = SolitaireBoard.generate_from_json(board_json)

    for i, move in enumerate(board_json["moves"]):
        sys.stdout.write("\033[2J\033[H")

        print(f"Move {i + 1} of {len(board_json['moves'])}")
        print(f"Next move: {move}")

        board.print_game()
        sys.stdout.flush()

        input()

        board.play_move(move)


if __name__ == "__main__":
    main()
